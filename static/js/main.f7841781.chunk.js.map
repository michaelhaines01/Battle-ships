{"version":3,"sources":["components/aiboard.js","components/humanboard.js","components/playershiplist.js","components/aishiplist.js","components/messageboard.js","gamelogic/gamecontroller.js","components/singleboard.js","factories/ships.js","factories/gameboard.js","components/placeships.js","components/info.js","components/header.js","App.js","index.js"],"names":["Aiboard","props","ai","aiboard","className","id","map","nested","row","cell","key","ship","hit","value","onClick","handleClick","console","log","Humanboard","human","playerboard","Playershiplist","ships","playersunkships","Createship","shipsarray","i","long","sunk","push","Aishiplist","aisunkships","Messageboard","Aimessage","Playermessage","Winnermessage","setgameover","turn","winner","gameover","Gamecontroller","useState","theaiboard","setaiboard","theplayerboard","setplayerboard","x","y","lastshot","setlastshot","sethit","setturn","setwinner","setsunkships","setaisunkships","checkwinner","allshipssunk","player","Handleai","newboard","aiattack","gameboard","isshipsunk","display","indexai","findIndex","element","handleAddai","handleAddplayer","index","newsunkships","newaisunkships","updatedboard","receiveattack","setTimeout","Singleboard","board","Ship","name","length","hitsarray","shipname","shot","shipsunk","Gameboard","carrier","battleship","destroyer","submarine","patrolboat","shipnames","Object","keys","randomnumber","Math","floor","random","aishot","createboard","boardobject","Array","fill","Placeships","theships","cords","vertical","aiships","blankboard1","start","setstart","shipsplaced","setshipsplace","checkvalid","newcord","blankboard","truthy","forEach","a","b","setcord","startcord","round","placeships","playerset","aiset","handleclick","Infoboard","src","alt","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7841781.chunk.js","sourcesContent":["import \"./aiboard.scss\";\r\nimport React from \"react\";\r\n\r\nconst Aiboard = (props) => {\r\n  const ai = props.aiboard;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"game-board\" id=\"human\">\r\n        {ai.map((nested, row) =>\r\n          nested.map((cell, key) => {\r\n            if (cell.ship === true && cell.hit === false)\r\n              return (\r\n                <div\r\n                  className=\"hidden\"\r\n                  key={key}\r\n                  value={row}\r\n                  onClick={() => {\r\n                    props.handleClick(key, row);\r\n                  }}\r\n                ></div>\r\n              );\r\n            else if (cell.hit === true && cell.ship === false)\r\n              return (\r\n                <div\r\n                  className=\"aimiss\"\r\n                  key={key}\r\n                  value={row}\r\n                  onClick={() => {\r\n                    console.log(\"already hit\");\r\n                  }}\r\n                >\r\n                  X\r\n                </div>\r\n              );\r\n            else if (cell.hit === true && cell.ship === true)\r\n              return (\r\n                <div\r\n                  className=\"aishiphit\"\r\n                  key={key}\r\n                  value={row}\r\n                  onClick={() => {\r\n                    console.log(\"already hit\");\r\n                  }}\r\n                ></div>\r\n              );\r\n            return (\r\n              <div\r\n                className=\"hidden\"\r\n                key={key}\r\n                value={row}\r\n                onClick={() => {\r\n                  props.handleClick(key, row);\r\n                }}\r\n              ></div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aiboard;\r\n","import \"./humanboard.scss\";\r\nconst Humanboard = (props) => {\r\n  const human = props.playerboard;\r\n\r\n  return (\r\n    <div className=\"game-board\" id=\"ai\">\r\n      {human.map((nested, row) =>\r\n        nested.map((cell, key) => {\r\n          if (cell.ship === true && cell.hit === false)\r\n            return <div className=\"ship\" key={key} value={row}></div>;\r\n          else if (cell.ship === true && cell.hit === true)\r\n            return <div className=\"shiphit\"></div>;\r\n          else if (cell.hit === true) return <div className=\"hit\">X</div>;\r\n          return <div className=\"hit\"></div>;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Humanboard;\r\n","import React from \"react\";\r\nimport \"./playershiplist.scss\";\r\n\r\nconst Playershiplist = (props) => {\r\n  let ships = props.playersunkships;\r\n\r\n  const Createship = (props) => {\r\n    let shipsarray = [];\r\n    for (let i = 0; i < props.ship.long; i++) {\r\n      if (props.ship.sunk === true) {\r\n        shipsarray.push(<div className=\"shiphit\" id={props.ship.ship}></div>);\r\n      } else {\r\n        shipsarray.push(<div className=\"ship\" id={props.ship.ship}></div>);\r\n      }\r\n    }\r\n    return <div className=\"ship-container\">{shipsarray}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"ships-container\">\r\n      {ships.map((ship) => {\r\n        return <Createship ship={ship} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Playershiplist;\r\n","import React from \"react\";\r\nimport \"./aishiplist.scss\";\r\nconst Aishiplist = (props) => {\r\n  let ships = props.aisunkships;\r\n  const Createship = (props) => {\r\n    let shipsarray = [];\r\n    for (let i = 0; i < props.ship.long; i++) {\r\n      if (props.ship.sunk === true) {\r\n        shipsarray.push(<div className=\"shiphit\" id={props.ship.ship}></div>);\r\n      } else {\r\n        shipsarray.push(<div className=\"ship\" id={props.ship.ship}></div>);\r\n      }\r\n    }\r\n    return <div className=\"ship-container\">{shipsarray}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"ships-container\">\r\n      {ships.map((ship) => {\r\n        return <Createship ship={ship} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Aishiplist;\r\n","import \"./messageboard.scss\";\r\nconst Messageboard = (props) => {\r\n  const Aimessage = () => {\r\n    return <h1>AI turn</h1>;\r\n  };\r\n\r\n  const Playermessage = () => {\r\n    return <h1>Players turn</h1>;\r\n  };\r\n\r\n  const Winnermessage = () => {\r\n    return (\r\n      <div>\r\n        <h1> LOL you will never beat me.</h1>\r\n        <button className=\"buttons\" onClick={() => props.setgameover(true)}>\r\n          Restart\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"messageboard-container\">\r\n      {!props.turn && !props.winner.gameover && <Aimessage />}\r\n      {props.turn && !props.winner.gameover && <Playermessage />}\r\n      {props.winner.gameover && <Winnermessage />}\r\n    </div>\r\n  );\r\n};\r\nexport default Messageboard;\r\n","import \"./gamecontroller.scss\";\r\nimport React, { useState } from \"react\";\r\nimport Aiboard from \"../components/aiboard.js\";\r\nimport Humanboard from \"../components/humanboard.js\";\r\nimport Playershiplist from \"../components/playershiplist.js\";\r\nimport Aishiplist from \"../components/aishiplist\";\r\nimport Messageboard from \"../components/messageboard\";\r\n\r\nconst Gamecontroller = (props) => {\r\n  let playerboard = props.playerboard;\r\n  let aiboard = props.aiboard;\r\n  const [theaiboard, setaiboard] = useState(aiboard);\r\n  const [theplayerboard, setplayerboard] = useState(playerboard);\r\n  const [lastshot, setlastshot] = useState({ x: 1, y: 1 });\r\n  const [hit, sethit] = useState(false);\r\n  const [turn, setturn] = useState(true);\r\n  const [winner, setwinner] = useState({ winner: \"\", gameover: false });\r\n  const [playersunkships, setsunkships] = useState([\r\n    { ship: \"battleship\", sunk: false, long: 4 },\r\n    { ship: \"destroyer\", sunk: false, long: 3 },\r\n    { ship: \"submarine\", sunk: false, long: 3 },\r\n    { ship: \"patrolboat\", sunk: false, long: 2 },\r\n    { ship: \"carrier\", sunk: false, long: 5 },\r\n  ]);\r\n  const [aisunkships, setaisunkships] = useState([\r\n    { ship: \"battleship\", sunk: false, long: 4 },\r\n    { ship: \"destroyer\", sunk: false, long: 3 },\r\n    { ship: \"submarine\", sunk: false, long: 3 },\r\n    { ship: \"patrolboat\", sunk: false, long: 2 },\r\n    { ship: \"carrier\", sunk: false, long: 5 },\r\n  ]);\r\n\r\n  const checkwinner = () => {\r\n    if (props.ai.allshipssunk() === true) {\r\n      setwinner({ winner: \"Player\", gameover: true });\r\n      return true;\r\n    } else if (props.player.allshipssunk() === true) {\r\n      setwinner({ winner: \"AI\", gameover: true });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleClick = (key, row) => {\r\n    if (winner.gameover === true) {\r\n      console.log(winner.gameover);\r\n      return;\r\n    } else {\r\n      let updatedboard = props.ai.receiveattack(row, key, aiboard);\r\n      setaiboard([...updatedboard.gameboard]);\r\n      if (updatedboard.hit === true) {\r\n        if (props.ai.isshipsunk(theaiboard[row][key].display) === true) {\r\n          let index = playersunkships.findIndex((element) => {\r\n            if (element.ship === theaiboard[row][key].display) {\r\n              return true;\r\n            }\r\n            return null;\r\n          });\r\n          handleAddplayer(index, playersunkships, setsunkships);\r\n        }\r\n        checkwinner();\r\n      }\r\n      setturn(false);\r\n      setTimeout(function () {\r\n        Handleai();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const Handleai = () => {\r\n    const newboard = props.player.aiattack(theplayerboard, lastshot, hit);\r\n    setlastshot({ ...newboard.lastshot });\r\n    setplayerboard([...newboard.gameboard]);\r\n    sethit(newboard.hit);\r\n    if (newboard.hit === true) {\r\n      if (\r\n        props.player.isshipsunk(\r\n          theplayerboard[newboard.lastshot.x][newboard.lastshot.y].display\r\n        ) === true\r\n      ) {\r\n        let indexai = aisunkships.findIndex((element) => {\r\n          if (\r\n            element.ship ===\r\n            theplayerboard[newboard.lastshot.x][newboard.lastshot.y].display\r\n          ) {\r\n            return true;\r\n          }\r\n          return null;\r\n        });\r\n        handleAddai(indexai);\r\n      }\r\n    }\r\n    checkwinner();\r\n    setturn(true);\r\n    return;\r\n  };\r\n\r\n  const handleAddplayer = (index) => {\r\n    let newsunkships = [...playersunkships];\r\n    newsunkships[index] = { ...newsunkships[index], sunk: true };\r\n    setsunkships([...newsunkships]);\r\n    return;\r\n  };\r\n  const handleAddai = (index) => {\r\n    let newaisunkships = [...aisunkships];\r\n    newaisunkships[index] = { ...newaisunkships[index], sunk: true };\r\n    setaisunkships([...newaisunkships]);\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"twoboard-container\">\r\n        <Playershiplist playersunkships={playersunkships} />\r\n        <Aiboard handleClick={handleClick} aiboard={theaiboard} />\r\n        <Messageboard\r\n          turn={turn}\r\n          setturn={setturn}\r\n          winner={winner}\r\n          setgameover={props.setgameover}\r\n        />\r\n        <Humanboard playerboard={playerboard} />\r\n        <Aishiplist aisunkships={aisunkships} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gamecontroller;\r\n","import \"./singleboard.scss\";\r\nconst Singleboard = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"board-container\">\r\n        <div className=\"game-board\">\r\n          {props.board.map((nested, row) =>\r\n            nested.map((cell, key) => {\r\n              if (cell.ship === true)\r\n                return (\r\n                  <div className=\"ship-square\" key={key} value={row}></div>\r\n                );\r\n              else\r\n                return (\r\n                  <div className=\"grid-square\" key={key} value={row}></div>\r\n                );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Singleboard;\r\n","const Ship = (name, length) => {\r\n  let shipname = name;\r\n\r\n  let hitsarray = [];\r\n\r\n  const hit = (shot) => {\r\n    hitsarray.push(shot);\r\n\r\n    return hitsarray;\r\n  };\r\n\r\n  const shipsunk = () => {\r\n    if (length === hitsarray.length) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return { shipname, hit, shipsunk };\r\n};\r\nexport default Ship;\r\n","import Ship from \"./ships.js\";\r\n\r\nconst Gameboard = () => {\r\n  const ships = {\r\n    carrier: Ship(\"carrier\", 5),\r\n    battleship: Ship(\"battleship\", 4),\r\n    destroyer: Ship(\"destroyer\", 3),\r\n    submarine: Ship(\"submarine\", 3),\r\n    patrolboat: Ship(\"patrolboat\", 2),\r\n  };\r\n\r\n  const shipnames = Object.keys(ships);\r\n\r\n  const createboard = () => {\r\n    const boardobject = {\r\n      ship: false,\r\n      hit: false,\r\n      display: \"~\",\r\n    };\r\n    return Array(10)\r\n      .fill(boardobject)\r\n      .map(() => Array(10).fill(boardobject));\r\n  };\r\n\r\n  let randomnumber = () => {\r\n    const min = 0;\r\n    const max = 9;\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const receiveattack = (x, y, gameboard) => {\r\n    let hit = true;\r\n    if (gameboard[x][y].ship === true && gameboard[x][y].hit !== true) {\r\n      ships[gameboard[x][y].display].hit(x);\r\n      gameboard[x][y] = { ...gameboard[x][y], hit: true };\r\n      return { gameboard, hit };\r\n    } else {\r\n      gameboard[x][y] = { ...gameboard[x][y], hit: true };\r\n      hit = false;\r\n      return { gameboard, hit };\r\n    }\r\n  };\r\n\r\n  let aiattack = (gameboard, lastshot, hit) => {\r\n    let aishot = false;\r\n    while (aishot === false) {\r\n      if (\r\n        gameboard[lastshot.x][lastshot.y].ship === true &&\r\n        gameboard[lastshot.x][lastshot.y].hit !== true\r\n      ) {\r\n        ships[gameboard[lastshot.x][lastshot.y].display].hit(\"hit\");\r\n        gameboard[lastshot.x][lastshot.y] = {\r\n          ...gameboard[lastshot.x][lastshot.y],\r\n          hit: true,\r\n        };\r\n\r\n        lastshot = { x: lastshot.x, y: lastshot.y };\r\n        hit = true;\r\n        aishot = true;\r\n      } else if (\r\n        lastshot.x + 1 === 10 ||\r\n        lastshot.y + 1 === 10 ||\r\n        lastshot.x - 1 === -1 ||\r\n        lastshot.y - 1 === -1\r\n      ) {\r\n        lastshot = { x: randomnumber(), y: randomnumber() };\r\n      } else if (\r\n        gameboard[lastshot.x + 1][lastshot.y].ship === true &&\r\n        gameboard[lastshot.x + 1][lastshot.y].hit !== true\r\n      ) {\r\n        ships[gameboard[lastshot.x + 1][lastshot.y].display].hit(\"hi\");\r\n        gameboard[lastshot.x + 1][lastshot.y] = {\r\n          ...gameboard[lastshot.x + 1][lastshot.y],\r\n          hit: true,\r\n        };\r\n        lastshot = { x: lastshot.x + 1, y: lastshot.y };\r\n\r\n        hit = true;\r\n        aishot = true;\r\n      } else if (\r\n        gameboard[lastshot.x - 1][lastshot.y].ship === true &&\r\n        gameboard[lastshot.x - 1][lastshot.y].hit !== true\r\n      ) {\r\n        ships[gameboard[lastshot.x - 1][lastshot.y].display].hit(\"hit\");\r\n        gameboard[lastshot.x - 1][lastshot.y] = {\r\n          ...gameboard[lastshot.x - 1][lastshot.y],\r\n          hit: true,\r\n        };\r\n        lastshot = { x: lastshot.x - 1, y: lastshot.y };\r\n        hit = true;\r\n        aishot = true;\r\n      } else if (\r\n        gameboard[lastshot.x][lastshot.y + 1].ship === true &&\r\n        gameboard[lastshot.x][lastshot.y + 1].hit !== true\r\n      ) {\r\n        ships[gameboard[lastshot.x][lastshot.y + 1].display].hit(\"hit\");\r\n        gameboard[lastshot.x][lastshot.y + 1] = {\r\n          ...gameboard[lastshot.x][lastshot.y + 1],\r\n          hit: true,\r\n        };\r\n        lastshot = { x: lastshot.x, y: lastshot.y + 1 };\r\n        hit = true;\r\n        aishot = true;\r\n      } else if (\r\n        gameboard[lastshot.x][lastshot.y - 1].ship === true &&\r\n        gameboard[lastshot.x][lastshot.y - 1].hit !== true\r\n      ) {\r\n        ships[gameboard[lastshot.x][lastshot.y - 1].display].hit(\"hit\");\r\n        gameboard[lastshot.x][lastshot.y - 1] = {\r\n          ...gameboard[lastshot.x][lastshot.y - 1],\r\n          hit: true,\r\n        };\r\n        lastshot = { x: lastshot.x, y: lastshot.y - 1 };\r\n        hit = true;\r\n        aishot = true;\r\n      } else {\r\n        lastshot = { x: randomnumber(), y: randomnumber() };\r\n      }\r\n    }\r\n    return { gameboard, lastshot, hit };\r\n  };\r\n\r\n  const allshipssunk = () => {\r\n    for (let i = 0; i < shipnames.length; i++) {\r\n      if (ships[shipnames[i]].shipsunk() !== true) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const isshipsunk = (shipname) => {\r\n    if (ships[shipname].shipsunk() !== true) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return {\r\n    aiattack,\r\n    ships,\r\n    receiveattack,\r\n    allshipssunk,\r\n    createboard,\r\n    isshipsunk,\r\n  };\r\n};\r\n\r\nexport default Gameboard;\r\n","import \"./placeships.scss\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport Gamecontroller from \"../gamelogic/gamecontroller.js\";\r\nimport Singleboard from \"../components/singleboard.js\";\r\nimport Gameboard from \"../factories/gameboard.js\";\r\n\r\nconst Placeships = (props) => {\r\n  const player = Gameboard();\r\n  const ai = Gameboard();\r\n\r\n  const theships = [\r\n    {\r\n      ship: \"carrier\",\r\n      long: 5,\r\n      cords: [],\r\n      vertical: true,\r\n    },\r\n    {\r\n      ship: \"battleship\",\r\n      long: 4,\r\n      cords: [],\r\n      vertical: false,\r\n    },\r\n    {\r\n      ship: \"destroyer\",\r\n      long: 3,\r\n      cords: [],\r\n      vertical: true,\r\n    },\r\n    {\r\n      ship: \"submarine\",\r\n      long: 3,\r\n      cords: [],\r\n      vertical: false,\r\n    },\r\n    {\r\n      ship: \"patrolboat\",\r\n      long: 2,\r\n      cords: [],\r\n      vertical: true,\r\n    },\r\n  ];\r\n  const aiships = [\r\n    {\r\n      ship: \"carrier\",\r\n      long: 5,\r\n      cords: [],\r\n      vertical: true,\r\n    },\r\n    {\r\n      ship: \"battleship\",\r\n      long: 4,\r\n      cords: [],\r\n      vertical: false,\r\n    },\r\n    {\r\n      ship: \"destroyer\",\r\n      long: 3,\r\n      cords: [],\r\n      vertical: true,\r\n    },\r\n    {\r\n      ship: \"submarine\",\r\n      long: 3,\r\n      cords: [],\r\n      vertical: false,\r\n    },\r\n    {\r\n      ship: \"patrolboat\",\r\n      long: 2,\r\n      cords: [],\r\n      vertical: true,\r\n    },\r\n  ];\r\n\r\n  const blankboard1 = Gameboard().createboard();\r\n  const [playerboard, setplayerboard] = useState(blankboard1);\r\n  const [aiboard, setaiboard] = useState(blankboard1);\r\n  const [start, setstart] = useState(false);\r\n  const [shipsplaced, setshipsplace] = useState(false);\r\n\r\n  const randomnumber = () => {\r\n    const min = 0;\r\n    const max = 9;\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const randomxy = () => {\r\n    const random = [\"true\", \"false\"][Math.round(Math.random())];\r\n    return random;\r\n  };\r\n\r\n  const checkvalid = (newcord, blankboard) => {\r\n    let truthy = true;\r\n\r\n    newcord.forEach(([a, b]) => {\r\n      if (a === 10 || b === 10) {\r\n        return (truthy = false);\r\n      } else if (blankboard[a][b].ship === true) {\r\n        return (truthy = false);\r\n      }\r\n    });\r\n    return truthy;\r\n  };\r\n\r\n  const placeships = (ship, blankboard) => {\r\n    console.log(ship);\r\n    for (let i = 0; i < ship.cords[0].length; i++) {\r\n      let x = ship.cords[0][i][0];\r\n      let y = ship.cords[0][i][1];\r\n      blankboard[x][y] = {\r\n        ...blankboard[x][y],\r\n        ship: true,\r\n        display: ship.ship,\r\n      };\r\n    }\r\n\r\n    return blankboard;\r\n  };\r\n\r\n  const setcord = (ships) => {\r\n    let blankboard = Gameboard().createboard();\r\n\r\n    ships.forEach((ship, index) => {\r\n      let startcord = randomnumber();\r\n      let y = randomnumber();\r\n\r\n      ships[index] = { ...ships[index], vertical: randomxy() };\r\n      let newcord = [];\r\n      let i = 0;\r\n\r\n      while (i < ship.long) {\r\n        if (ship.vertical === true) {\r\n          if (checkvalid([[y, startcord + i]], blankboard) === true) {\r\n            newcord.push([y, startcord + i]);\r\n            i++;\r\n          } else {\r\n            startcord = randomnumber();\r\n            y = randomnumber();\r\n            i = 0;\r\n            newcord = [];\r\n          }\r\n        } else {\r\n          if (checkvalid([[y + i, startcord]], blankboard) === true) {\r\n            newcord.push([y + i, startcord]);\r\n            i++;\r\n          } else {\r\n            startcord = randomnumber();\r\n            y = randomnumber();\r\n            i = 0;\r\n            newcord = [];\r\n          }\r\n        }\r\n      }\r\n      ship.cords.push(newcord);\r\n      placeships(ship, blankboard);\r\n      setshipsplace(true);\r\n    });\r\n    return blankboard;\r\n  };\r\n\r\n  const handleclick = () => {\r\n    let playerset = setcord(theships);\r\n    setplayerboard([...playerset]);\r\n\r\n    let aiset = setcord(aiships);\r\n    setaiboard([...aiset]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!start && <Singleboard board={playerboard} setcord={setcord} />}\r\n\r\n      {start && (\r\n        <Gamecontroller\r\n          playerboard={playerboard}\r\n          aiboard={aiboard}\r\n          player={player}\r\n          ai={ai}\r\n          setgameover={props.setgameover}\r\n          setwinner={props.setwinner}\r\n        />\r\n      )}\r\n      <div className={\"button-container \" + (start && \"active\")}>\r\n        {!start && (\r\n          <button className=\"place-btn\" onClick={() => handleclick()}>\r\n            Place ships\r\n          </button>\r\n        )}\r\n        {!start && shipsplaced && (\r\n          <button className=\"start-btn\" onClick={() => setstart(true)}>\r\n            Start game\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Placeships;\r\n","import React from \"react\";\r\nimport \"./info.scss\";\r\n\r\nconst Infoboard = (props) => {\r\n  return (\r\n    <div className=\"board-container\">\r\n      <div className=\"legend-container\">\r\n        <div className=\"sqaure-container\">\r\n          <div className=\"ship\"></div>\r\n          <h4>Ship</h4>\r\n        </div>\r\n        <div className=\"sqaure-container\">\r\n          <div className=\"shiphit\"></div>\r\n          <h4> Ship hit</h4>\r\n        </div>\r\n        <div className=\"sqaure-container\">\r\n          <div className=\"openwater\"></div>\r\n          <h4>Openwater</h4>\r\n        </div>\r\n        <div className=\"sqaure-container\">\r\n          <div className=\"miss\">X</div>\r\n          <h4>Miss</h4>\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button\r\n            className=\"startbutton\"\r\n            onClick={() => props.setgameover(false)}\r\n          >\r\n            <h3>Lets do battle</h3>\r\n            <img\r\n              src=\"https://img.icons8.com/ios-filled/30/00000/cannon.png\"\r\n              alt=\"cannon\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Infoboard;\r\n","import \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Battleships</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import \"./App.css\";\r\nimport Placeships from \"./components/placeships.js\";\r\nimport React, { useState } from \"react\";\r\nimport Infoboard from \"./components/info.js\";\r\nimport Header from \"./components/header.js\";\r\n\r\nfunction App() {\r\n  //<Gamecontroller setrestart={setrestart} players={players} />\r\n  const [gameover, setgameover] = useState(true);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      {gameover && <Infoboard setgameover={setgameover} />}\r\n      {!gameover && <Placeships setgameover={setgameover} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}